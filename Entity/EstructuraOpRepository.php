<?php

namespace UCI\Boson\EyCBundle\Entity;

use Doctrine\ORM\EntityRepository;
//use Gedmo\Tree\Entity\Repository\NestedTreeRepository;

/**
 * EstructuraOpRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EstructuraOpRepository extends EntityRepository
{
    public function findMostrarEstrucRaizOp()
    {
        $em = $this->getEntityManager();

        $dql = 'SELECT eop
                  FROM EyCBundle:EstructuraOp eop
                 WHERE eop.parent IS NULL';

        $consulta = $em->createQuery($dql);

        return $consulta->getResult();
    }

    public function findByMostrarValoresCamposEstrucOp($ide,$order, $page, $limit, $filter,$cantCampos,$direction)
    {
        $em = $this->getEntityManager();

        $dql = 'SELECT eop.nombre as NomEOP,eop.id as IdEop, es.id as estructura, es.nombre as nomEstruc, ce.nombre as nomCampo, ve.id, ve.valor
                  FROM EyCBundle:ValoresEstruc ve
                  JOIN ve.campoEstruc ce
                  JOIN ve.estructuraOp eop
                  JOIN eop.estructura es
                 WHERE es.id = :ideop
                ORDER BY eop.'.$order.' '.$direction;

        $respuesta = array();
        $consulta = $em->createQuery($dql);
        $consulta->setFirstResult(($page - 1) * $limit*$cantCampos)
            ->setMaxResults($limit*$cantCampos);
        $consulta->setParameter('ideop', $ide);

        $arreglar = $consulta->getArrayResult();

//        print_r($arreglar);
        $ids = array();
        for($i = 0; $i < count($arreglar); $i++){
            if(!in_array($arreglar[$i]['IdEop'],$ids)){
                array_push($ids,$arreglar[$i]['IdEop']);
            }
        }
//        print_r($ids);
        $valores = array();
        for($i = 0; $i < count($ids); $i++){
            $ins = array();
            $nomb = "";
            $nombEstr = "";
            for($j = 0; $j < count($arreglar); $j++){
                if($arreglar[$j]['IdEop'] == $ids[$i]){
                    array_push($ins,$arreglar[$j]['valor']);
                    $nomb = $arreglar[$j]['NomEOP'];
                    $nombEstr = $arreglar[$j]['nomEstruc'];
                }
            }
            $valores[$i]['IdEop'] = $ids[$i];
            $valores[$i]['NomEOP'] = $nomb;
            $valores[$i]['nomEstruc'] = $nombEstr;
            $valores[$i]['valores'] = $ins;
        }

        //        print_r($valores);
        $consulta2 = $em->createQuery($dql);
        $consulta2->setParameter('ideop', $ide);

        $confiltro =$consulta2-> getArrayResult();
//        print_r($confiltro );
        if($filter != ''){
            $ids = array();
            for($i = 0; $i < count($confiltro); $i++){
                if(!in_array($confiltro[$i]['IdEop'],$ids)){
                    array_push($ids,$confiltro[$i]['IdEop']);
                }
            }
//        print_r($ids);
            $valores = array();
            for($i = 0; $i < count($ids); $i++){
                $ins = array();
                for($j = 0; $j < count($confiltro); $j++){
                    if($confiltro[$j]['IdEop'] == $ids[$i]){
                        array_push($ins,$confiltro[$j]['valor']);
                        $nomb = $arreglar[$j]['NomEOP'];
                        $nombEstr = $arreglar[$j]['nomEstruc'];
                    }
                }
                if($filter == $nomb) {
                    $valores[$i]['IdEop'] = $ids[$i];
                    $valores[$i]['NomEOP'] = $nomb;
                    $valores[$i]['nomEstruc'] = $nombEstr;
                    $valores[$i]['valores'] = $ins;
                }
            }
        }

        $respuesta['valores'] = $valores;
        $respuesta['count'] = count($consulta2->getArrayResult())/$cantCampos;
        return $respuesta;
    }

    public function findByMostrarValoresCamposEstrucOp2($ide)
    {
        $em = $this->getEntityManager();

        $dql = 'SELECT eop.nombre as NomEOP,eop.id as IdEop, es.id as estructura, ce.nombre as nomCampo, ve.id, ve.valor
                  FROM EyCBundle:ValoresEstruc ve
                  JOIN ve.campoEstruc ce
                  JOIN ve.estructuraOp eop
                  JOIN eop.estructura es
                 WHERE es.id = :ideop';

        $respuesta = array();
        $consulta = $em->createQuery($dql);
        $consulta->setParameter('ideop', $ide);

        $arreglar = $consulta->getArrayResult();

//        print_r($arreglar);
        $ids = array();
        for($i = 0; $i < count($arreglar); $i++){
            if(!in_array($arreglar[$i]['IdEop'],$ids)){
                array_push($ids,$arreglar[$i]['IdEop']);
            }
        }
//        print_r($ids);
        $valores = array();
        for($i = 0; $i < count($ids); $i++){
            $ins = array();
            $nomb = "";
            for($j = 0; $j < count($arreglar); $j++){
                if($arreglar[$j]['IdEop'] == $ids[$i]){
                    array_push($ins,$arreglar[$j]['valor']);
                    $nomb = $arreglar[$j]['NomEOP'];
                }
            }
            $valores[$i]['IdEop'] = $ids[$i];
            $valores[$i]['NomEOP'] = $nomb;
            $valores[$i]['valores'] = $ins;
        }

        $respuesta['valores'] = $valores;
        return $respuesta;
    }

//    public function findOneByMostrarValoresCamposEstrucOp($ideop)
//    {
//        $em = $this->getEntityManager();
//
//        $dql = 'SELECT eop.nombre as NomEOP,ce.nombre as nomCampo, ve.id, ve.valor
//                  FROM EyCBundle:ValoresEstruc ve
//                  JOIN ve.campoEstruc ce
//                  JOIN ve.estructuraOp eop
//                 WHERE ve.estructuraOp = :ideop';
//
//        $consulta = $em->createQuery($dql);
//        $consulta->setParameter('ideop', $ideop);
//
//        return $consulta->getArrayResult();
//    }

    public function findEstrucOp($ide,$criterio)
    {
        $em = $this->getEntityManager();

        $dql = 'SELECT eop.nombre as NomEOP,ce.nombre as nomCampo, ve.id, ve.valor
                  FROM EyCBundle:ValoresEstruc ve
                  JOIN ve.campoEstruc ce
                  JOIN ve.estructuraOp eop
                  JOIN eop.estructura es
                 WHERE eop.id = :ideop';


        $consulta = $em->createQuery($dql);
        $consulta->setParameter('ideop', $ide);
//        $consulta->setParameter('nombre', '%' . $criterio . '%');

        return $consulta->getArrayResult();
    }

    public function findEstrucOpID($ide)
    {
        $em = $this->getEntityManager();

        $dql = 'SELECT eop.nombre as NomEOP,eop.id as IdEop,ce.nombre as nomCampo,es.nombre as nomEstruc, ve.id, ve.valor
                  FROM EyCBundle:ValoresEstruc ve
                  JOIN ve.campoEstruc ce
                  JOIN ve.estructuraOp eop
                  JOIN eop.estructura es
                 WHERE eop.id = :ideop';

        $consulta = $em->createQuery($dql);
        $consulta->setParameter('ideop', $ide);

        return $consulta->getArrayResult();
    }


}
